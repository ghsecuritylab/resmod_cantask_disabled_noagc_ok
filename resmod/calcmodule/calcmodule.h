/******************************************************************************
 |
 |  	FILENAME:  calcmodule.h
 |
 |	Copyright 2017 Adara Systems Ltd. as an unpublished work.
 |	All Rights Reserved.
 |
 |	The information contained herein is confidential property of Adara Systems
 |	Ltd. The use, copying, transfer or disclosure of such information is
 |	prohibited except by express written agreement with Adara Systems Ltd.
 |
 |  	DESCRIPTION:
 |
 |  	PUBLIC FUNCTIONS:
 |
 |
 |  	NOTES:
 |
 |  	AUTHOR(S):  Roque
 |	    DATE:		Jul 11, 2017
 |
 ******************************************************************************/
#ifndef RESMOD_CALCMODULE_CALCMODULE_H_
#define RESMOD_CALCMODULE_CALCMODULE_H_


#define NUM_TAPS	101
#define MAX_RECORD_NO 312

/* Includes ------------------------------------------------------------------*/
#include <array>
#include <cstdint>

#include <segger/SEGGER_RTT.h>

#include "resmod/resmodcommon.h"
/* Namespace declaration -----------------------------------------------------*/
namespace resmod {

// Returned by calculations performed by the calc module
struct ResistivityResults {
  float average_current;
  float average_voltage;
  float resistivity;

  ResistivityResults();
};

/* Class definition ----------------------------------------------------------*/
class CalcModule {
public:
	CalcModule(const uint32_t gain);
	~CalcModule();

	/* unused */
	CalcModule(const CalcModule&) = delete;
	CalcModule& operator=(const CalcModule&) = delete;

	ResistivityResults PerformCalculation(VTable_t &vt, ITable_t &it);

private:
	//int16_t * debugbuff_;
	float * debugbuff_;
	uint32_t debugindex_;


	float * offs_rtt_;
	uint32_t offs_rtt_id_;



	//std::array<const float, 312> ref_sine_   = {32768,  34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790};
	//std::array<const float, 312> ref_cosine_ = {65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476};


	std::array<const float, 312> ref_sine_   = {32768,  34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790};
	std::array<const float, 312> ref_cosine_ = {65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476,	65536,	65476,	65297,	64999,	64584,	64052,	63407,	62649,	61783,	60810,	59736,	58563,	57295,	55939,	54497,	52977,	51383,	49720,	47996,	46217,	44388,	42517,	40610,	38675,	36718,	34747,	32768,	30790,	28819,	26862,	24927,	23020,	21149,	19320,	17541,	15817,	14154,	12560,	11040,	9598,	8242,	6974,	5801,	4727,	3754,	2888,	2130,	1485,	953,	538,	240,	61,	1,	61,	240,	538,	953,	1485,	2130,	2888,	3754,	4727,	5801,	6974,	8242,	9598,	11040,	12560,	14154,	15817,	17541,	19320,	21149,	23020,	24927,	26862,	28819,	30790,	32768,	34747,	36718,	38675,	40610,	42517,	44388,	46217,	47996,	49720,	51383,	52977,	54497,	55939,	57295,	58563,	59736,	60810,	61783,	62649,	63407,	64052,	64584,	64999,	65297,	65476};


	std::array<float, 312> n3_;
	std::array<float, 312> n4_;



};
}  // namespace resmod
#endif /* RESMOD_CALCMODULE_CALCMODULE_HPP_ */
